<?php # fetch_sync.php

require_once __DIR__ . '/../include/config.php';
require __DIR__ . '/functions.php';

if (!defined('SYNC_API_KEY') || !defined('SYNC_SELF') || !defined('SYNC_SELF_SALT') || !is_array(SYNC_PEERS)) {
    http_response_code(500); echo json_encode(['error' => 'Sync config incomplete']); exit;
}

$fetchDaysBack = defined('FETCH_DAYS_BACK') ? max(1, (int)FETCH_DAYS_BACK) : 1;
$eventTypes = ['UserCreated'];
$today = floor(time() / 86400);
$startDay = $today - ($fetchDaysBack - 1);

foreach (SYNC_PEERS as $peerAlias => $peerData) {
    if ($peerAlias === SYNC_SELF || !isset($peerData['url'], $peerData['salt'])) continue;

    $peerUrl  = rtrim($peerData['url'], '/');
    $peerSalt = $peerData['salt'];
    $localSalt = SYNC_SELF_SALT;

    // === ФАЗА 1: авторизация по GET-запросу ===
    $sig = hash_hmac('sha256', "peer=" . SYNC_SELF, SYNC_API_KEY . $localSalt . $peerSalt);
    $authUrl = "$peerUrl/sync.php?peer=" . urlencode(SYNC_SELF) . "&sig=$sig";

    $auth = curl_init($authUrl);
    curl_setopt_array($auth, [
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_TIMEOUT        => 5,
    ]);
    $authResp = curl_exec($auth);
    curl_close($auth);

    $lines = explode("\n", trim($authResp));
    $first = json_decode($lines[0] ?? '', true);

    if (!is_array($first) || $first['status'] !== 'authorized') {
        echo "[FAIL] Not authorized by $peerAlias\n";
        continue;
    }

    echo "[START] Session with $peerAlias started\n";

    for ($i = 0; $i < $fetchDaysBack; $i++) {
        $day = $startDay + $i;
        $eventsSaved = 0;

        foreach ($eventTypes as $type) {
            $query = ['type' => $type, 'day' => $day];
            $json  = json_encode($query);

            $key = hash('sha256', SYNC_API_KEY . $localSalt . $peerSalt, true);
            $iv  = random_bytes(16);
            $enc = openssl_encrypt($json, 'AES-256-CBC', $key, OPENSSL_RAW_DATA, $iv);
            $payload = [
                'peer' => SYNC_SELF,
                'data' => base64_encode($iv . $enc)
            ];

            $ch = curl_init("$peerUrl/sync.php");
            curl_setopt_array($ch, [
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_TIMEOUT        => 10,
                CURLOPT_POST           => true,
                CURLOPT_POSTFIELDS     => json_encode($payload),
                CURLOPT_HTTPHEADER     => ['Content-Type: application/json']
            ]);
            $response = curl_exec($ch);
            curl_close($ch);

            if (!is_string($response)) {
                echo "[FAIL] No response from $peerAlias ($type, day $day)\n";
                continue;
            }

            $lines = explode("\n", trim($response));

            if (isset($lines[0]) && json_decode($lines[0], true)['status'] === 'no_data') {
                echo "[INFO] No data from $peerAlias for $type @ day $day\n";
                continue;
            }

            if (isset($lines[0]) && json_decode($lines[0], true)['status'] === 'sending') {
                echo "[INFO] Receiving data from $peerAlias ($type, day $day)\n";
                array_shift($lines);
            }

            $decryptedData = [];

            foreach ($lines as $line) {
                $line = trim($line);
                if (!$line || str_starts_with($line, '{"status":')) continue;

                $raw = base64_decode($line, true);
                if (!is_string($raw) || strlen($raw) < 17) {
                    echo "[ERROR] Failed to decrypt from $peerAlias @ day $day ($type): malformed payload\n";
                    continue;
                }

                $iv  = substr($raw, 0, 16);
                $ct  = substr($raw, 16);
                $dec = openssl_decrypt($ct, 'AES-256-CBC', $key, OPENSSL_RAW_DATA, $iv);

                if (!is_string($dec)) {
                    echo "[ERROR] Failed to decrypt from $peerAlias @ day $day ($type): openssl_decrypt failed\n";
                    continue;
                }

                $parsed = json_decode($dec, true);
                if (!is_array($parsed)) {
                    echo "[ERROR] Failed to parse decrypted payload from $peerAlias @ day $day ($type)\n";
                    continue;
                }

                $decryptedData[] = $parsed;
            }

            if (empty($decryptedData)) continue;

            $dir = __DIR__ . "/inbound/$day";
            if (!is_dir($dir)) mkdir($dir, 0775, true);

            $savePath = "$dir/{$peerAlias}_{$type}.json";
            file_put_contents($savePath, implode("\n", array_map('json_encode', $decryptedData)));
            $eventsSaved += count($decryptedData);

            echo "[INFO] Saved data from $peerAlias to $savePath\n";

            if (json_decode(end($lines), true)['status'] === 'disconnected') {
                echo "[END] Session with $peerAlias closed\n";
            }
        }

        $dayPath = __DIR__ . "/inbound/$day";
        if (is_dir($dayPath) && $eventsSaved === 0) {
            rmdir($dayPath);
        }
    }
}
