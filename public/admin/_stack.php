<?php // v0.4.117
/* public/admin/_stack.php
Purpose: –ú–æ–¥—É–ª—å ¬´–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–µ–∫–∞¬ª –¥–ª—è SafeMode‚Äë–∞–¥–º–∏–Ω–∫–∏. –í—ã–ø–æ–ª–Ω—è–µ—Ç
         —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞, —Å—Ä–∞–≤–Ω–∏–≤–∞—è –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –≤ —à–∞–ø–∫–µ
         –∫–∞–∂–¥–æ–≥–æ PHP‚Äë—Ñ–∞–π–ª–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã —Å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—É–±–ª–∏—á–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ –∫–ª–∞—Å—Å–æ–≤.
         –ü–æ–º–æ–≥–∞–µ—Ç –≤—ã—è–≤–∏—Ç—å –æ—Ç—Å—Ç—É–ø–ª–µ–Ω–∏—è –æ—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –∑–∞–±—ã—Ç—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
         –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–µ–∫—Ü–∏–π.
FIX: –ù–æ–≤—ã–π –º–æ–¥—É–ª—å. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ª—É–∂–±—É App\Services\Admin\ContractChecker –¥–ª—è
     –æ–±—Ö–æ–¥–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ `app` –∏ `framework`. –û—Ç–ª–∏—á–∏—è –≤—ã–¥–µ–ª—è—é—Ç—Å—è —Ü–≤–µ—Ç–æ–º.
*/

declare(strict_types=1);

if (!defined('ADMIN_ENTRY')) {
    http_response_code(403);
    echo 'Forbidden';
    exit;
}

use App\Services\Admin\ContractChecker;

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–π –ø—É—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ (forum/). –ù–∞ –æ–¥–∏–Ω —É—Ä–æ–≤–µ–Ω—å –≤–≤–µ—Ä—Ö –æ—Ç /public/admin.
$projectRoot = realpath(__DIR__ . '/../../');
$scanDirs    = [$projectRoot . '/app', $projectRoot . '/framework'];

// –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ (file => ['missing'=>[], 'extra'=>[]]).
$results = ContractChecker::check($scanDirs);

echo '<div class="panel"><div class="hd"><strong>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–µ–∫–∞</strong></div><div class="bd">';

// –°–∫—Ä—ã–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ –≤ —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º–æ–º –±–ª–æ–∫–µ
echo '<details style="margin-bottom:12px"><summary style="cursor:pointer;font-weight:bold">–û–ø–∏—Å–∞–Ω–∏–µ</summary>';
echo '<p class="muted">–≠—Ç–æ—Ç —Ç–µ—Å—Ç —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—É–±–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤, –æ–ø–∏—Å–∞–Ω–Ω—ã–π –≤ —Ä–∞–∑–¥–µ–ª–µ
<code>Contract:</code> –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞, —Å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ –≤ –∫–ª–∞—Å—Å–µ. –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
—É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç –∏–ª–∏ —Å–∏–≥–Ω–∞—Ç—É—Ä—ã –º–µ—Ç–æ–¥–æ–≤.</p>';
echo '</details>';

// –°–æ–±–∏—Ä–∞–µ–º –¥–µ—Ä–µ–≤–æ –ø–æ –ø—É—Ç–∏ —Ñ–∞–π–ª–∞.  –§–∞–π–ª—ã –±–µ–∑ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π —Ç–∞–∫–∂–µ –≤–∫–ª—é—á–∞–µ–º,
// —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É.
$tree = [];
foreach ($results as $file => $info) {
    $rel  = str_replace($projectRoot . '/', '', $file);
    $parts = explode('/', $rel);
    $ref  =& $tree;
    foreach ($parts as $idx => $part) {
        if ($idx === count($parts) - 1) {
            $ref[$part] = $info;
        } else {
            if (!isset($ref[$part]) || !is_array($ref[$part])) {
                $ref[$part] = [];
            }
            $ref =& $ref[$part];
        }
    }
}

// –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª-–≤–æ —Ñ–∞–π–ª–æ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
/**
 * @param array<string,mixed> $node
 * @return array{total:int,issues:int}
 */
function stack_count_dir(array $node): array
{
    $total = 0;
    $issues = 0;
    foreach ($node as $key => $value) {
        if (isset($value['missing']) || isset($value['extra'])) {
            $total++;
            if (!empty($value['missing']) || !empty($value['extra'])) {
                $issues++;
            }
        } elseif (is_array($value)) {
            $child = stack_count_dir($value);
            $total += $child['total'];
            $issues += $child['issues'];
        }
    }
    return ['total' => $total, 'issues' => $issues];
}

// –†–µ–Ω–¥–µ—Ä –¥–µ—Ä–µ–≤–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ —Ñ–∞–π–ª–æ–≤
/**
 * @param array<string,mixed> $node
 * @param string $prefix
 * @return void
 */
function stack_render_tree(array $node, string $prefix = ''): void
{
    ksort($node);
    foreach ($node as $name => $value) {
        if (isset($value['missing']) || isset($value['extra'])) {
            // —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ
            $issues = (!empty($value['missing']) || !empty($value['extra']));
            $color = $issues ? 'red' : 'green';
            echo '<details><summary><span style="color:' . $color . '">üìÑ ' . htmlspecialchars($name, ENT_QUOTES, 'UTF-8') . '</span></summary>';
            if ($issues) {
                $missingList = empty($value['missing']) ? '‚Äî' : htmlspecialchars(implode(', ', $value['missing']), ENT_QUOTES, 'UTF-8');
                $extraList   = empty($value['extra']) ? '‚Äî' : htmlspecialchars(implode(', ', $value['extra']), ENT_QUOTES, 'UTF-8');
                echo '<div style="margin-left:12px">–ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–µ—Ç–æ–¥—ã: <span style="color:red">' . $missingList . '</span></div>';
                echo '<div style="margin-left:12px">–õ–∏—à–Ω–∏–µ –º–µ—Ç–æ–¥—ã: <span style="color:red">' . $extraList . '</span></div>';
            } else {
                echo '<div style="margin-left:12px;color:green">–ö–æ–Ω—Ç—Ä–∞–∫—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –º–µ—Ç–æ–¥–∞–º.</div>';
            }
            echo '</details>';
        } else {
            // –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
            $counts = stack_count_dir($value);
            $label = 'üìÅ ' . htmlspecialchars($name, ENT_QUOTES, 'UTF-8') . ' <span style="font-size:11px;color:#666">(' . $counts['issues'] . '/' . $counts['total'] . ')</span>';
            echo '<details><summary>' . $label . '</summary>';
            stack_render_tree($value, $prefix === '' ? $name : $prefix . '/' . $name);
            echo '</details>';
        }
    }
}

// –í—ã–≤–æ–¥ –¥–µ—Ä–µ–≤–∞
echo '<div style="border:1px solid #ddd;border-radius:6px;padding:8px;max-height:420px;overflow:auto">';
stack_render_tree($tree);
echo '</div>';

echo '</div></div>';